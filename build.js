#!/usr/bin/env node

/*
 * Copyright (C) 2024 Savoir-faire Linux Inc.
 * SPDX-License-Identifier: Apache-2.0
 */

import * as esbuild from 'esbuild'
import copy from 'esbuild-plugin-copy';

import { cleanPlugin } from './pkg/lib/esbuild-cleanup-plugin.js';
import { esbuildStylesPlugins } from './pkg/lib/esbuild-common.js';

// List of directories to use when using import statements
const nodePaths = ['pkg/lib'];
const outdir = 'dist';

function notifyEndPlugin() {
    return {
        name: 'notify-end-plugin',
        setup(build) {
            build.onEnd(() => {
                console.log(`Build finished`);
            });
        }
    };
}

const context = await esbuild.context({
    bundle: true,
    entryPoints: ['./src/index.js'],
    external: ['*.woff', '*.woff2', '*.jpg', '*.svg', '../../assets*'],
    loader: { ".js": "jsx" },
    nodePaths,
    outdir,
    plugins: [
        cleanPlugin(),
        // index.html and manifest.json are not generated by esbuild, they just need to be copied
        copy({
            assets: [
                { from: ['./src/manifest.json'], to: ['./manifest.json'] },
                { from: ['./src/index.html'], to: ['./index.html'] },
            ]
        }),
        ...esbuildStylesPlugins,
        notifyEndPlugin(),
    ]
});

await context.rebuild();

context.dispose();
